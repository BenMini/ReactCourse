{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","ender","exit","component","enter","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.68fd11ab.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n  static propTypes = {\n    history: PropTypes.object,\n  };\n  myInput = React.createRef();\n  goToStore = (event) => {\n    // 1. Stop the form from submitting\n    event.preventDefault();\n    // 2. get the text from the input\n    const storeName = this.myInput.current.value;\n    // 3. Change the page to /store/whatever-was-entered\n    this.props.history.push(`/store/${storeName}`);\n  };\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h1>Please Enter A Store</h1>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store →</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = (props) => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of\">Of</span>\n        <span className=\"the\">The</span>\n      </span>\n      Day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func,\n  };\n  renderOrder = (key) => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === \"available\";\n    const transitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout: { ender: 500, exit: 500 },\n    };\n    // Make sure the fish is loaded before we continue\n    if (!fish) return null;\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry {fish ? fish.name : \"fish\"} is no longer available\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count} </span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddFishForm extends React.Component {\n  static propTypes = {\n    addFish: PropTypes.func,\n  };\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n  createFish = (event) => {\n    // 1. Stop the form from submitting\n    event.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value,\n    };\n    this.props.addFish(fish);\n    // refresh the form\n    event.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input\n          name=\"price\"\n          ref={this.priceRef}\n          type=\"text\"\n          placeholder=\"Price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out</option>\n        </select>\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n        <input\n          name=\"image\"\n          ref={this.imageRef}\n          type=\"text\"\n          placeholder=\"Image\"\n        />\n        <button type=\"submiit\">+ Add Fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number,\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func,\n  };\n  handleChange = (event) => {\n    console.log(event.currentTarget.value);\n    // update that fish\n    // 1. Take a copy of the current fish\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value,\n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          type=\"text\"\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value=\"this.props.fish.image \"\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\n          Remove Fish\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Login = (props) => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory.</p>\n    <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\n      Log In With Github\n    </button>\n    <button className=\"facebook\" onClick={() => props.authenticate(\"Facebook\")}>\n      Log In With Facebook\n    </button>\n    <button className=\"twitter\" onClick={() => props.authenticate(\"Twitter\")}>\n      Log In With Twitter\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyBhSAZdEsFR3Z4AwntEXOVpym9hfNF-bp8\",\n  authDomain: \"catch-of-the-day-ben-min.firebaseapp.com\",\n  databaseURL: \"https://catch-of-the-day-ben-min.firebaseio.com\",\n  projectId: \"catch-of-the-day-ben-min\",\n  storageBucket: \"catch-of-the-day-ben-min.appspot.com\",\n  messagingSenderId: \"303563646957\",\n  appId: \"1:303563646957:web:c8b28742500042458ba9e4\",\n  measurementId: \"G-WE671Z7WFW\",\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// this is a named export\nexport { firebaseApp };\n\n// this is a default export\nexport default base;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase, { auth } from \"firebase\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func,\n  };\n\n  state = {\n    uid: null,\n    owner: null,\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async (authData) => {\n    // 1. Look up the current store in the firebase database\n    const store = await base.fetch(this.props.storeId, { context: this });\n    console.log(store);\n    // 2. Claim it if there is no owner\n    if (!store.owner) {\n      // save it as our own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid,\n      });\n    }\n    // 3. Set the state of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid,\n    });\n    console.log(authData);\n  };\n  authenticate = (provider) => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n  };\n\n  logout = async () => {\n    console.log(\"Logging Out\");\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  };\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out!</button>;\n    // 1. Check if they are logged in\n\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n\n    // 2. Check if they are not the owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry you are not the owner!</p>\n          {logout}\n        </div>\n      );\n    }\n\n    // 3. They must be the owner, just render the inventory\n    return (\n      <div className=\"inventory\">\n        <h2> Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map((key) => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\n\nclass Fish extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number,\n    }),\n    addToOrder: PropTypes.func,\n  };\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === \"available\";\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button\n          disabled={!isAvailable}\n          onClick={() => this.props.addToOrder(this.props.index)}\n        >\n          {isAvailable ? \"Add To Order\" : \"Sold Out\"}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {},\n  };\n\n  static propTypes = {\n    match: PropTypes.object,\n  };\n  componentDidMount() {\n    const { params } = this.props.match;\n    // first reinstate our local storage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\",\n    });\n  }\n  componentDidUpdate() {\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n    console.log(this.state.order);\n  }\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = (fish) => {\n    // 1. take a copy of the existing state\n    // ( Never want to reach into state and modify directly )\n    const fishes = { ...this.state.fishes };\n    // 2. Add our new fish to that fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    // 3. Set the new fishes object to state\n    this.setState({ fishes });\n    console.log(\"Adding a fish\");\n  };\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  };\n\n  updateFish = (key, updatedFish) => {\n    // 1. Take a copy of the current state\n    const fishes = { ...this.state.fishes };\n    // 2. Update that state\n    fishes[key] = updatedFish;\n    // 3. Set that to state\n    this.setState({ fishes });\n  };\n\n  deleteFish = (key) => {\n    // 1. Take a copy of state\n    const fishes = { ...this.state.fishes };\n    // 2. update the state\n    fishes[key] = null;\n    // 3. update state\n    this.setState({ fishes });\n  };\n\n  addToOrder = (key) => {\n    // 1. take a copy of state\n    const order = { ...this.state.order };\n    // 2. either add to the order, or update the number in our order\n    order[key] = order[key] + 1 || 1;\n    // 3. call setState\n    this.setState({ order });\n  };\n  removeFromOrder = (key) => {\n    // 1. take a copy of state\n    const order = { ...this.state.order };\n    // 2. remove that item from order\n    delete order[key];\n    // 3. call setState\n    this.setState({ order });\n  };\n  render() {\n    return (\n      <>\n        <div className=\"catch-of-the-day\">\n          <div className=\"menu\">\n            <Header tagline=\"Fresh Seafood Market\" />\n            <ul className=\"fishes\">\n              {Object.keys(this.state.fishes).map((key) => (\n                <Fish\n                  key={key}\n                  index={key}\n                  details={this.state.fishes[key]}\n                  addToOrder={this.addToOrder}\n                />\n              ))}\n            </ul>\n          </div>\n          <Order\n            fishes={this.state.fishes}\n            order={this.state.order}\n            removeFromOrder={this.removeFromOrder}\n          />\n          <Inventory\n            addFish={this.addFish}\n            updateFish={this.updateFish}\n            deleteFish={this.deleteFish}\n            loadSampleFishes={this.loadSampleFishes}\n            fishes={this.state.fishes}\n            storeId={this.props.match.params.storeId}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nconst NotFound = () => (\n  <div className=\"\">\n    <h2>Not Found!???!!!!</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Router from \"./components/Router\";\nimport \"./css/style.css\";\n\nrender(<Router />, document.querySelector(\"#main\"));\n"],"sourceRoot":""}